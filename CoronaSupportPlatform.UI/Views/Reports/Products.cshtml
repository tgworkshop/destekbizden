@model CoronaSupportPlatform.UI.Models.ViewModels.Reports.ProductReportsViewModel
@{
    ViewBag.Title = "Ürün Raporları";
}
@section headPlugins{
    <style>
        #tenderProductQuantityChart {
            width: 100%;
            height: 500px;
        }
    </style>
}
<div class="main-content-inner">
    <div class="mt-5 mb-5">
        <div class="col-lg-12 mt-sm-30 mt-xs-30">
            <div class="card">
                <div class="card-body">
                    <div class="d-sm-flex justify-content-between align-items-center">
                        <h4 class="header-title">Ürün Raporları</h4>
                    </div>
                    <div class="trad-history mt-4">
                        <div id="tenderProductQuantityChart"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scriptPlugins{

    <!-- Amchart -->
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>

    <!-- Chart code -->
    <script>
        am4core.ready(function () {

            // Themes begin
            am4core.useTheme(am4themes_animated);
            // Themes end

            // Create chart instance
            var chart = am4core.create("tenderProductQuantityChart", am4charts.XYChart);

            // Add data
            chart.data = [
            @foreach(var tenderProduct in Model.ProductQuantities)
            {
                <text>
                {
                    "product": "@Html.Raw(tenderProduct.Name)",
                    "quantity": @tenderProduct.Total,
                    },
                </text>
            }];

            // Create axes
            var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
            categoryAxis.dataFields.category = "product";
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.renderer.minGridDistance = 30;

            categoryAxis.renderer.labels.template.adapter.add("dy", function (dy, target) {
                if (target.dataItem && target.dataItem.index & 2 == 2) {
                    return dy + 25;
                }
                return dy;
            });

            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

            // Create series
            var series = chart.series.push(new am4charts.ColumnSeries());
            series.dataFields.valueY = "quantity";
            series.dataFields.categoryX = "product";
            series.name = "quantity";
            series.columns.template.tooltipText = "[bold]{valueY}[/]";
            //series.columns.template.fillOpacity = .8;

            chart.colors.list = [
              am4core.color("#845EC2"),
              am4core.color("#D65DB1"),
              am4core.color("#FF6F91"),
              am4core.color("#FF9671"),
              am4core.color("#FFC75F"),
              am4core.color("#F9F871"),
            ];

            var labelBullet = series.bullets.push(new am4charts.LabelBullet());
            labelBullet.label.text = "{quantity}";
            labelBullet.label.dy = -20;

            //var columnTemplate = series.columns.template;
            //columnTemplate.strokeWidth = 2;
            //columnTemplate.strokeOpacity = 1;

            //var label = columnTemplate.createChild(am4core.Label);
            //label.text = "{displayValue}";
            //label.color 

            series.columns.template.adapter.add("fill", function(fill, target) {
                return chart.colors.getIndex(target.dataItem.index).saturate(0.8);
            });

        }); // end am4core.ready()
    </script>
}